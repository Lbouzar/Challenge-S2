version: "3"

services:
  app:
    build:
      context: .
      dockerfile: site/Dockerfile.prod

    container_name: ${APP_CONTAINER_NAME}
    restart: unless-stopped
    depends_on:
      - db
    environment:
      ENVIRONMENT: production
      DB_HOST: ${DB_HOST}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    ports:
      - ${APP_PORT}:80
    volumes:
      - ./app:/var/app/html/
      - ./server/000-default.conf:/etc/apache2/sites-available/000-default.conf
      - ./server/apache2.conf:/etc/apache2/apache2.conf
      - ./server/php.ini:/usr/local/etc/php/php.ini

  db:
    image: postgres
    container_name: ${DB_CONTAINER_NAME}
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${DB_PORT}:5432
    volumes:
      - pgdata:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    depends_on:
      - db
    ports:
      - ${ADMINER_PORT}:80

volumes:
  pgdata:
# setting the docker compose: docker-compose -f docker-compose.ymal -f docker-compose.prod.yaml up -d
